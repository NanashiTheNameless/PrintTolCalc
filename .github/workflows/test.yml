name: Test with tox on all supported Python versions

on:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  test-and-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12, 3.13]

    steps:
      - name: Checkout repo
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
        with:
          fetch-depth: 0

      - name: Upgrade pip and install tox
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Run tox
        run: tox

  check-formatting:
    needs: test-and-format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f

      - name: Set up Python
        uses: actions/setup-python@e9c40fbc2bf309799101412f178fe3064ebb27ac
        with:
          python-version: '3.13'

      - name: Upgrade pip and install tox
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Run format check
        run: tox -e format

      - name: Check for formatting changes
        id: format_changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            echo "CHANGES=true" >> "$GITHUB_OUTPUT"
          else
            echo "CHANGES=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create PR for formatting fixes
        if: steps.format_changes.outputs.CHANGES == 'true'
        run: |
          BRANCH=fix/format-$(date +%s)
          git checkout -b "$BRANCH"
          git add .
          git commit -m "Auto-format code using tox"
          git push origin "$BRANCH"
          gh pr create --title "Auto-format code using tox" \
                       --body "This PR applies formatting fixes from tox." \
                       --base main --head "$BRANCH"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
