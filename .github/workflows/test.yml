name: Test with tox on all supported Python versions

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8.18", "3.9.23", "3.10.18", "3.11.13", "3.12.11", "3.13.5", "3.14.0-beta.4" ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Set up Python ${{ matrix.python-version }}
        id: setup
        continue-on-error: true
        uses: actions/setup-python@2e3e4b15a884dc73a63f962bff250a855150a234
        with:
          python-version: ${{ matrix.python-version }}

      - name: Log Python setup result
        run: |
          if [ "${{ steps.setup.outcome }}" != "success" ]; then
            echo "Python ${{ matrix.python-version }} is not available. Skipping job steps."
          fi

      - name: Upgrade pip and install tox
        if: steps.setup.outcome == 'success'
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libxml2-dev \
            libxmlsec1-dev libffi-dev liblzma-dev
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Run tox
        if: steps.setup.outcome == 'success'
        run: tox --verbose --recreate

  check-formatting:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Set up Python
        uses: actions/setup-python@2e3e4b15a884dc73a63f962bff250a855150a234
        with:
          python-version: '3.13'

      - name: Upgrade pip and install tox
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Run tox
        run: tox --verbose --recreate

      - name: Run lint check
        run: tox --verbose --recreate -e lint

      - name: Run format check
        run: tox --verbose --recreate -e format

      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Create PR for formatting fixes
        uses: peter-evans/create-pull-request@2e50522bdf313efe32e5628afead9048374012ed
        with:
          token: ${{ secrets.PAT }}
          commit-message: Auto-format code using tox.
          branch: fix-format-${{ steps.vars.outputs.sha_short }}
          title: Auto-format code using tox.
          body: |
            This PR applies formatting fixes from tox.
            ${{ github.event_name == 'workflow_dispatch' && 'Triggered manually' || format('Triggered by \"{0}\" {1}', github.event.head_commit.message, github.event.head_commit.url) }}
          base: main
